import React, { useState } from 'react';
import EmotionDetection from './EmotionDetection';
import FirebaseEmotionDetection from './FirebaseEmotionDetection';

const EmotionDetectionWrapper = ({ onEmotionDetected, currentEmotion, onEmotionChange }) => {
  const [useFirebase, setUseFirebase] = useState(false);

  const toggleMode = () => {
    setUseFirebase(!useFirebase);
  };

  return (
    <div className="emotion-detection-wrapper">
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î */}
      <div className="mode-toggle-section">
        <button 
          className={`mode-toggle-btn ${!useFirebase ? 'active' : ''}`}
          onClick={() => setUseFirebase(false)}
        >
          üíæ Local Mode
        </button>
        <button 
          className={`mode-toggle-btn ${useFirebase ? 'active' : ''}`}
          onClick={() => setUseFirebase(true)}
        >
          üî• Firebase Mode
        </button>
      </div>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
      <div className="mode-info">
        {useFirebase ? (
          <div className="firebase-info">
            <h3>üî• Firebase Mode (‡∏ü‡∏£‡∏µ!)</h3>
            <p>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Firebase Firestore (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏á‡∏¥‡∏ô)</p>
            <p>‚Ä¢ ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô Base64 ‡πÉ‡∏ô Firestore</p>
            <p>‚Ä¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
            <p>‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Cloud</p>
          </div>
        ) : (
          <div className="local-info">
            <h3>üíæ Local Mode</h3>
            <p>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Local Storage ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î JSON</p>
            <p>‚Ä¢ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£</p>
            <p>‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå</p>
          </div>
        )}
      </div>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
      {useFirebase ? (
        <FirebaseEmotionDetection 
          onEmotionDetected={onEmotionDetected}
          currentEmotion={currentEmotion}
          onEmotionChange={onEmotionChange}
        />
      ) : (
        <EmotionDetection 
          onEmotionDetected={onEmotionDetected}
          currentEmotion={currentEmotion}
          onEmotionChange={onEmotionChange}
        />
      )}
    </div>
  );
};

export default EmotionDetectionWrapper;
